{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/navbar/navbar.component.html","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/data.service.ts","./src/app/navbar/navbar.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-navbar></app-navbar>\\n<section>\\n<br>\\n<br>\\n<br>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-8\\\">\\n        <form class=\\\"form\\\">\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <select class=\\\"form-control\\\" [(ngModel)]=\\\"default\\\" name=\\\"listofcities\\\" id=\\\"exampleSelect1\\\" (change)=\\\"searchbankdata(search_data,default)\\\">\\n                        <option [ngValue]=\\\"value\\\" disabled>choose cities</option>\\n                          <option value=\\\"DELHI\\\">DELHI</option>\\n                          <option value=\\\"PATNA\\\">PATNA</option>\\n                          <option value=\\\"MUMBAI\\\">MUMBAI</option>\\n                          <option value=\\\"BANGALORE\\\">BANGALORE</option>\\n                          <option value=\\\"KOLKATA\\\">KOLKATA</option> \\n                    </select>\\n                  </div>\\n              </div>\\n              <div class=\\\"col-md-8\\\">\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                      <input matInput placeholder=\\\"Enter Bank name\\\" [(ngModel)]=\\\"search_data\\\" name=\\\"search\\\"  id=\\\"search\\\" \\n                    (keyup)=\\\"searchbankdata(search_data,default)\\\">\\n                    </mat-form-field>\\n              </div>\\n          </div>\\n        </form>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"container\\\"  *ngIf=\\\"datafound\\\" >\\n  <div class=\\\"text\\\">\\n    <p class=\\\"text-uppercase\\\" *ngIf=\\\"datafound\\\" >The list of <b>{{search_data}}</b> in<b> {{default}}</b> are:-</p>\\n    <span >\\n       <p><b>ADD {{search_data}} to  FAV:-</b> &nbsp;&nbsp;<i class=\\\"far fa-bookmark\\\" (click)=\\\"this.onClick()\\\" [ngStyle]=\\\"{'cursor':'pointer'}\\\" [ngClass]=\\\"{'active':isActive}\\\"></i> </p>\\n    </span>\\n    \\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\">\\n<mat-spinner *ngIf=\\\"isLoading\\\" [ngStyle]=\\\"{'margin-left':'35%'}\\\"\\n        class=\\\"example-margin\\\"\\n        [color]=\\\"color\\\">\\n    </mat-spinner>\\n</div>\\n<div class=\\\"container \\\"  *ngIf=\\\"!isLoading && datafound\\\">\\n  \\n<div class='mat-elevation-z8'>\\n    <mat-table [dataSource]=\\\"users\\\" matSort>\\n    <ng-container matColumnDef=\\\"BRANCH\\\">\\n    <th mat-header-cell *matHeaderCellDef  mat-sort-header><b> BRANCH</b> </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.branch}} </td>\\n    </ng-container>\\n  \\n    <ng-container matColumnDef=\\\"ADDRESS\\\">\\n    <th mat-header-cell *matHeaderCellDef  mat-sort-header><b> ADDRESS</b> </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.address}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"STATE\\\">\\n    <th mat-header-cell *matHeaderCellDef  mat-sort-header> <b>STATE </b></th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.state}} </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"IFSC\\\">\\n    <th mat-header-cell *matHeaderCellDef  mat-sort-header> <b>IFSC </b></th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.ifsc}} </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"BANK_NAME\\\">\\n    <th mat-header-cell *matHeaderCellDef  mat-sort-header> <b>BANK_NAME </b></th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.bank_name}} </td>\\n    </ng-container>\\n    \\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  \\n  </mat-table>\\n    <mat-paginator [length]=\\\"totalPosts\\\" [pageSize]=\\\"postsPerPage\\\" [pageSizeOptions]=\\\"pageSizeOptions\\\" (page)=\\\"onChangedPage($event)\\\"\\n  ></mat-paginator>\\n</div>\\n</div>\\n\\n\\n<br>\\n<br>\\n</section>\\n<router-outlet></router-outlet>\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n    <img src=\\\"favicon.ico\\\" width=\\\"30\\\" height=\\\"30\\\" alt=\\\"\\\">\\n  </a>\\n\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">BANK</a>\\n  <!--<button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"/\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n      </ul>\\n  </div>-->\\n</nav>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"th{\\r\\n    font-size:.8rem;\\r\\n    color:black;\\r\\n    \\r\\n}\\r\\n.hide{\\r\\n    display: none;\\r\\n}\\r\\ntr mat-footer-row mat-footer-cell{\\r\\n     justify-content: center !important;\\r\\n\\r\\n }\\r\\n.example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\nselect{\\r\\n  margin-top:-10%;\\r\\n}\\r\\n.fa-bookmark{\\r\\n    color:black;\\r\\n}\\r\\n.fa-bookmark.active\\r\\n{\\r\\n    color:red;\\r\\n    font-size:2rem;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0lBQ2YsV0FBVzs7QUFFZjtBQUNBO0lBQ0ksYUFBYTtBQUNqQjtBQUNDO0tBQ0ksa0NBQWtDOztDQUV0QztBQUNBO0VBQ0MsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixXQUFXO0FBQ2I7QUFFQTtFQUNFLFdBQVc7QUFDYjtBQUNBO0VBQ0UsZUFBZTtBQUNqQjtBQUNBO0lBQ0ksV0FBVztBQUNmO0FBQ0E7O0lBRUksU0FBUztJQUNULGNBQWM7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRoe1xyXG4gICAgZm9udC1zaXplOi44cmVtO1xyXG4gICAgY29sb3I6YmxhY2s7XHJcbiAgICBcclxufVxyXG4uaGlkZXtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuIHRyIG1hdC1mb290ZXItcm93IG1hdC1mb290ZXItY2VsbHtcclxuICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlciAhaW1wb3J0YW50O1xyXG5cclxuIH1cclxuIC5leGFtcGxlLWZvcm0ge1xyXG4gIG1pbi13aWR0aDogMTUwcHg7XHJcbiAgbWF4LXdpZHRoOiA1MDBweDtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLmV4YW1wbGUtZnVsbC13aWR0aCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuc2VsZWN0e1xyXG4gIG1hcmdpbi10b3A6LTEwJTtcclxufVxyXG4uZmEtYm9va21hcmt7XHJcbiAgICBjb2xvcjpibGFjaztcclxufVxyXG4uZmEtYm9va21hcmsuYWN0aXZlXHJcbntcclxuICAgIGNvbG9yOnJlZDtcclxuICAgIGZvbnQtc2l6ZToycmVtO1xyXG59Il19 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { User } from './user.model';\nimport { City } from './select.model';\nimport { DataService } from './data.service';\nimport { Subscription } from \"rxjs\";\nimport { PageEvent } from \"@angular/material\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\nexport class AppComponent implements OnInit, OnDestroy {\n\n  color = \"warn\";\n  title = 'nyapp2';\n  users: User[];\n  isActive:boolean=false;\n  datafound: boolean = false;\n   private postsSub: Subscription;\n  isLoading = false;\n  public totalPosts = 0;\n  public postsPerPage = 5;\n  public currentPage = 1;\n  pageSizeOptions = [5, 10,20];\n  query: string;\n  p: string;\n\n\n  onClick() {\n    this.isActive = !this.isActive;\n  }\n  displayedColumns: string[] = ['BRANCH','ADDRESS','STATE','IFSC','BANK_NAME',];\n  cities: City[] = [\n    { value: 'DELHI', viewValue: 'DELHI' },\n    { value: 'PUNE', viewValue: 'PUNE' },\n    { value: 'PATNA', viewValue: 'PATNA' },\n    { value: 'MUMBAI', viewValue: 'MUMBAI' },\n    { value: 'BANGALORE', viewValue: 'BANGLORE' },\n  ];\n  \n  handleSuccess(data) {\n    this.datafound = true;\n    this.isLoading = false;\n    this.users = data;\n  }\n  constructor(private _dataService: DataService) { }\n\n  ngOnInit() {\n    \n  }\n\n  searchbankdata(query: string, p: string) {\n    \n    this.isLoading = true;\n    this.query = query;\n    this.p = p;\n    this._dataService.getPosts(this.postsPerPage, this.currentPage, this.query, this.p);\n    this.postsSub = this._dataService\n      .getPostUpdateListener()\n      .subscribe((postData: { posts: User[]; postCount: number }) => {\n        this.totalPosts = postData.postCount;\n        this.users = postData.posts;\n        this.handleSuccess(this.users);\n        \n      });\n  }\n\nonChangedPage(pageData: PageEvent) {\n   // this.isLoading = true;\n    this.currentPage = pageData.pageIndex + 1;\n    this.postsPerPage = pageData.pageSize;\n    this._dataService.getPosts(this.postsPerPage, this.currentPage, this.query, this.p);\n    this.postsSub = this._dataService\n      .getPostUpdateListener()\n      .subscribe((postData: { posts: User[]; postCount: number }) => {\n        this.totalPosts = postData.postCount;\n        this.users = postData.posts;\n        this.handleSuccess(this.users);\n      });\n  }  \n  ngOnDestroy(){\n    \n    this.postsSub.unsubscribe();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\nimport { AppComponent } from './app.component';\n\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { DataService } from './data.service';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatPaginatorModule,\n    MatTableModule,\n    MatSortModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule\n\n    ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from './user.model';\nimport { map } from \"rxjs/operators\";\nimport { Subject } from \"rxjs\";\n//import {environment} from '../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private query: string;\n  private p: string;\n  public myArray = [];\n  public postData: User[]= [];\n  public myPost: {postData: User[], count: number};\n  //appUrl=environment.url;\n  \n  \n  appUrl = 'https://vast-shore-74260.herokuapp.com/banks?bank_name=';\n  private postsUpdated = new Subject<{ posts: User[]; postCount: number }>();\n  constructor(private _http: HttpClient) { }\n\n  \n  getPosts(postsPerPage: number, currentPage: number,query, p) {\n    var array: User[] = [];\n    let post: any;\n    let i=0,m=0;\n    this._http\n      .get<{ posts: any }>(\n        this.appUrl + query.toUpperCase() + '&&city=' + p\n      ).pipe(\n        map(postsData =>{\n          while(postsData[i]){\n            i++;\n          }\n        \n          for(let k=(postsPerPage*(currentPage-1));k<=((postsPerPage*(currentPage-1) + postsPerPage) -1);k++){\n            if(k>=i){\n              break;\n            }\n            array[m] = postsData[k];\n              m++;\n          }\n            return{\n              array, i\n            }\n        }\n      )\n      )\n      .subscribe(transformedPostData => {\n        const temp = transformedPostData;\n        this.postsUpdated.next({\n          posts: temp.array,\n          postCount: temp.i\n        });\n      });\n  }\n   getPostUpdateListener() {\n    return this.postsUpdated.asObservable();\n  }\n  getUsers(query, p) {\n    return this._http.get<User[]>(this.appUrl + query.toUpperCase() + '&&city=' + p);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html'\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  url:'https://vast-shore-74260.herokuapp.com/banks?bank_name='\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}